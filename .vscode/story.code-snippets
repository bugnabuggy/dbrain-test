{
  // Place your exinity-fe workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "React functional component": {
    "prefix": "story",
    "body": "import React from 'react';\nimport { Meta, Story } from '@storybook/react';\n\nimport {${1:${TM_FILENAME_BASE/(.stories)//}}, ${1:${TM_FILENAME_BASE/(.stories)//}}Props} from './${1:${TM_FILENAME_BASE/(.stories)//}}';\n\nconst ComponentUnderTest: React.FC<${1:${TM_FILENAME_BASE/(.stories)//}}Props> = props => {\nreturn <${1:${TM_FILENAME_BASE/(.stories)//}} {...props} />;\n};\n\nexport default {\ntitle: 'Root / Section / Subsection',\ncomponent: ComponentUnderTest,\nargTypes: {\nonChange: { action: 'something changed' },\n},\n} as Meta;\n\nconst Template: Story<${1:${TM_FILENAME_BASE/(.stories)//}}Props> = args => (\n<ComponentUnderTest {...args} />\n);\n\nexport const ${1:${TM_FILENAME_BASE/(.stories)//}}Story = Template.bind({});\n${1:${TM_FILENAME_BASE/(.stories)//}}Story.args = {\n};\n",
    "description": "Creates a Storybook storey for React functional in the same folder"
  }
}
